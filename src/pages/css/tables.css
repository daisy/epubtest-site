@import url('colors.css');

body {
    font-family: Verdana;
}

/* Fixed Headers */
/* fixed column headers */
thead th {
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    z-index: 2;
}
thead th:first-child {
    left: 0;
    z-index: 3;
}
tbody tr td:first-child {
    z-index: 2;
    left: 0;
    position: sticky;
}
tbody tr td:not(:first-child) {
    z-index: 1;
}

/* Proven method to visually hide something but */
/* still make it available to assistive technology */
/* Thanks to https://adrianroselli.com/2020/01/fixed-table-headers.html#VisHidden */
.visually-hidden {
    position: absolute;
    top: auto;
    overflow: hidden;
    clip: rect(1px 1px 1px 1px); /* IE 6/7 */
    clip: rect(1px, 1px, 1px, 1px);
    width: 1px;
    height: 1px;
    white-space: nowrap;
}

/* scroll container */
[role="region"][aria-labelledby][tabindex] {
    overflow: auto;
    max-height: 100vh;
}

[role="region"][aria-labelledby][tabindex]:focus {
    outline: .1em solid rgba(0,0,0,.1);
}
/* scrolling shadow */
[role="region"][aria-labelledby][tabindex] {
    background:
        linear-gradient(to right, transparent 30%, rgba(255,255,255,0)),
        linear-gradient(to right, rgba(255,255,255,0), white 70%) 0 100%,
        radial-gradient(farthest-side at 0% 50%, rgba(0,0,0,0.2), rgba(0,0,0,0)),
        radial-gradient(farthest-side at 100% 50%, rgba(0,0,0,0.2), rgba(0,0,0,0)) 0 100%;
    background-repeat: no-repeat;
    background-color: #fff;
    background-size: 4em 100%, 4em 100%, 1.4em 100%, 1.4em 100%;
    background-position: 0 0, 100%, 0 0, 100%;
    background-attachment: local, local, scroll, scroll;
}

/* overall table style */
table {
    border-collapse: collapse;
    width: 100%;
}
th, td {
    min-width: 5rem;
}
table caption {
    font-size: smaller;
    font-style: italic;
    text-align: left;
    padding: 1vh;
}
/* a solid background color and inset shadow for a 'border' stay fixed better than other options, for when the header is fixed and the table scrolls */
thead th {
    background: var(--hardcomp);
}
thead th {
    /* top and bottom 'border' */
    box-shadow: inset 0 1px 0 var(--primary), inset 0 -1px 0 var(--primary);
}
thead th:first-child {
    border-top-left-radius: 5px;
    border-bottom-left-radius: 5px;
}
thead th:last-child {
    border-top-right-radius: 5px;
    border-bottom-right-radius: 5px;
}
thead th:first-of-type {
    /* left, top and bottom 'border' */
    box-shadow: inset 0 1px 0 var(--primary), inset 0 -1px 0 var(--primary), inset 1px 0 0 var(--primary);
}
thead th:last-of-type {
    /* right, top and bottom 'border' */
    box-shadow: inset -1px 0 0 var(--primary), inset 0 1px 0 var(--primary), inset 0 -1px 0 var(--primary);
}
tbody tr:nth-child(even) {
    background-color: var(--softcomp);
}
tbody tr:nth-child(even) td:first-child {
    background-color: var(--hardcomp);
}
tbody tr:nth-child(odd) td:first-child {
    background-color: white;
}
th, td {
    text-align: left;
    font-size: smaller;
    font-weight: normal;
    vertical-align: top;
    padding: 3vh;
}
/* header text */
thead th {
    vertical-align: bottom;
    font-size: smaller;
    font-weight: bolder;
}
table.tests-for-topic thead th {
    vertical-align: top;
}
/* body text */
tbody a {
    display: block;
    padding-bottom: 1vh;
    color: var(--primary);
}
tbody ul {
    line-height: 1.5rem;
}

/**************************/
/* results table-specific */
tbody .testenv a {
    display: block;
    padding-bottom: 1vh;
}
tbody span.sw {
    display: block;
} 
tbody a.score, tbody td:not(:first-of-type) a {
    color: inherit;
}
tbody .not-tested {
    font-weight: lighter;
    font-style: italic;
}
tbody .readingSystem {
    font-size: larger;
}
tbody .sw:not(.readingSystem) {
    padding-left: 0.5rem;
}
tbody .readingSystem .vendor {
    font-size: smaller;
    display: block;
}
tbody span.pass, tbody span.fail {
    white-space: nowrap;
}


/* sorting */
thead th.sortable {
    cursor: pointer;
}
thead th.sortable::after {
    color: var(--sort-icons-color);
}
thead th.sortable[aria-sort='ascending']::after {
    content: '▲';
}
thead th.sortable[aria-sort='descending']::after {
    content: '▼';
}

.table-controls {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-top: 2rem;
    margin-bottom: 1rem;
}

.table-controls .table-filters {
    display: flex;
    flex-wrap: wrap;
    border: none;
    padding: 0;
    margin: 0;
    row-gap: .5rem;
    column-gap: 2rem;
}

.table-controls button {
    height: min-content;
    align-self: end;
}

@media (max-width: 768px) {
    .table-controls .table-filters {
        gap: .5rem;
    }
}